.TH "/home/deng/Project/autobot-feature-decision/ros/src/computing/perception/detection/vision_detector/packages/vision_darknet_detect/darknet/src/convolutional_layer.c" 3 "Fri May 22 2020" "Autoware_Doxygen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/deng/Project/autobot-feature-decision/ros/src/computing/perception/detection/vision_detector/packages/vision_darknet_detect/darknet/src/convolutional_layer.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'convolutional_layer\&.h'\fP
.br
\fC#include 'utils\&.h'\fP
.br
\fC#include 'batchnorm_layer\&.h'\fP
.br
\fC#include 'im2col\&.h'\fP
.br
\fC#include 'col2im\&.h'\fP
.br
\fC#include 'blas\&.h'\fP
.br
\fC#include 'gemm\&.h'\fP
.br
\fC#include <stdio\&.h>\fP
.br
\fC#include <time\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBswap_binary\fP (\fBconvolutional_layer\fP *l)"
.br
.ti -1c
.RI "void \fBbinarize_weights\fP (float *weights, int n, int size, float *binary)"
.br
.ti -1c
.RI "void \fBbinarize_cpu\fP (float *input, int n, float *binary)"
.br
.ti -1c
.RI "void \fBbinarize_input\fP (float *input, int n, int size, float *binary)"
.br
.ti -1c
.RI "int \fBconvolutional_out_height\fP (\fBconvolutional_layer\fP l)"
.br
.ti -1c
.RI "int \fBconvolutional_out_width\fP (\fBconvolutional_layer\fP l)"
.br
.ti -1c
.RI "\fBimage\fP \fBget_convolutional_image\fP (\fBconvolutional_layer\fP l)"
.br
.ti -1c
.RI "\fBimage\fP \fBget_convolutional_delta\fP (\fBconvolutional_layer\fP l)"
.br
.ti -1c
.RI "\fBconvolutional_layer\fP \fBmake_convolutional_layer\fP (int batch, int h, int w, int \fBc\fP, int n, int groups, int size, int stride, int padding, \fBACTIVATION\fP activation, int batch_normalize, int binary, int xnor, int adam)"
.br
.ti -1c
.RI "void \fBdenormalize_convolutional_layer\fP (\fBconvolutional_layer\fP l)"
.br
.ti -1c
.RI "void \fBresize_convolutional_layer\fP (\fBconvolutional_layer\fP *l, int w, int h)"
.br
.ti -1c
.RI "void \fBadd_bias\fP (float *output, float *biases, int batch, int n, int size)"
.br
.ti -1c
.RI "void \fBscale_bias\fP (float *output, float *scales, int batch, int n, int size)"
.br
.ti -1c
.RI "void \fBbackward_bias\fP (float *bias_updates, float *delta, int batch, int n, int size)"
.br
.ti -1c
.RI "void \fBforward_convolutional_layer\fP (\fBconvolutional_layer\fP l, \fBnetwork\fP net)"
.br
.ti -1c
.RI "void \fBbackward_convolutional_layer\fP (\fBconvolutional_layer\fP l, \fBnetwork\fP net)"
.br
.ti -1c
.RI "void \fBupdate_convolutional_layer\fP (\fBconvolutional_layer\fP l, \fBupdate_args\fP a)"
.br
.ti -1c
.RI "\fBimage\fP \fBget_convolutional_weight\fP (\fBconvolutional_layer\fP l, int \fBi\fP)"
.br
.ti -1c
.RI "void \fBrgbgr_weights\fP (\fBconvolutional_layer\fP l)"
.br
.ti -1c
.RI "void \fBrescale_weights\fP (\fBconvolutional_layer\fP l, float scale, float trans)"
.br
.ti -1c
.RI "\fBimage\fP * \fBget_weights\fP (\fBconvolutional_layer\fP l)"
.br
.ti -1c
.RI "\fBimage\fP * \fBvisualize_convolutional_layer\fP (\fBconvolutional_layer\fP l, char *window, \fBimage\fP *prev_weights)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "void add_bias (float * output, float * biases, int batch, int n, int size)"

.PP
Definition at line 411 of file convolutional_layer\&.c\&.
.SS "void backward_bias (float * bias_updates, float * delta, int batch, int n, int size)"

.PP
Definition at line 435 of file convolutional_layer\&.c\&.
.SS "void backward_convolutional_layer (\fBconvolutional_layer\fP l, \fBnetwork\fP net)"

.PP
Definition at line 483 of file convolutional_layer\&.c\&.
.SS "void binarize_cpu (float * input, int n, float * binary)"

.PP
Definition at line 43 of file convolutional_layer\&.c\&.
.SS "void binarize_input (float * input, int n, int size, float * binary)"

.PP
Definition at line 51 of file convolutional_layer\&.c\&.
.SS "void binarize_weights (float * weights, int n, int size, float * binary)"

.PP
Definition at line 28 of file convolutional_layer\&.c\&.
.SS "int convolutional_out_height (\fBconvolutional_layer\fP l)"

.PP
Definition at line 66 of file convolutional_layer\&.c\&.
.SS "int convolutional_out_width (\fBconvolutional_layer\fP l)"

.PP
Definition at line 71 of file convolutional_layer\&.c\&.
.SS "void denormalize_convolutional_layer (\fBconvolutional_layer\fP l)"

.PP
Definition at line 330 of file convolutional_layer\&.c\&.
.SS "void forward_convolutional_layer (\fBconvolutional_layer\fP l, \fBnetwork\fP net)"

.PP
Definition at line 445 of file convolutional_layer\&.c\&.
.SS "\fBimage\fP get_convolutional_delta (\fBconvolutional_layer\fP l)"

.PP
Definition at line 81 of file convolutional_layer\&.c\&.
.SS "\fBimage\fP get_convolutional_image (\fBconvolutional_layer\fP l)"

.PP
Definition at line 76 of file convolutional_layer\&.c\&.
.SS "\fBimage\fP get_convolutional_weight (\fBconvolutional_layer\fP l, int i)"

.PP
Definition at line 545 of file convolutional_layer\&.c\&.
.SS "\fBimage\fP* get_weights (\fBconvolutional_layer\fP l)"

.PP
Definition at line 577 of file convolutional_layer\&.c\&.
.SS "\fBconvolutional_layer\fP make_convolutional_layer (int batch, int h, int w, int c, int n, int groups, int size, int stride, int padding, \fBACTIVATION\fP activation, int batch_normalize, int binary, int xnor, int adam)"

.PP
Definition at line 176 of file convolutional_layer\&.c\&.
.SS "void rescale_weights (\fBconvolutional_layer\fP l, float scale, float trans)"

.PP
Definition at line 564 of file convolutional_layer\&.c\&.
.SS "void resize_convolutional_layer (\fBconvolutional_layer\fP * l, int w, int h)"

.PP
Definition at line 370 of file convolutional_layer\&.c\&.
.SS "void rgbgr_weights (\fBconvolutional_layer\fP l)"

.PP
Definition at line 553 of file convolutional_layer\&.c\&.
.SS "void scale_bias (float * output, float * scales, int batch, int n, int size)"

.PP
Definition at line 423 of file convolutional_layer\&.c\&.
.SS "void swap_binary (\fBconvolutional_layer\fP * l)"

.PP
Definition at line 15 of file convolutional_layer\&.c\&.
.SS "void update_convolutional_layer (\fBconvolutional_layer\fP l, \fBupdate_args\fP a)"

.PP
Definition at line 524 of file convolutional_layer\&.c\&.
.SS "\fBimage\fP* visualize_convolutional_layer (\fBconvolutional_layer\fP l, char * window, \fBimage\fP * prev_weights)"

.PP
Definition at line 594 of file convolutional_layer\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Autoware_Doxygen from the source code\&.
